-- MySQL dump 10.13  Distrib 8.0.33, for Win64 (x86_64)
--
-- Host: localhost    Database: mydb
-- ------------------------------------------------------
-- Server version	8.0.33

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `html`
--

DROP TABLE IF EXISTS `html`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `html` (
  `planet` int NOT NULL,
  `html1` text,
  `html2` text,
  `html3` text,
  `html4` text,
  `style` text,
  `units` text,
  PRIMARY KEY (`planet`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `html`
--

LOCK TABLES `html` WRITE;
/*!40000 ALTER TABLE `html` DISABLE KEYS */;
INSERT INTO `html` VALUES (1,'<body>\n  <center><br>\n<div id=\"body1\">\n  <h1>Unit 1: Data Types </h1><br>\n  <hr/>\n  <center/>\n  <table><tr><th>Text Type</th><th>Numeric Type</th><th>Boolean Type</th></tr>\n  <tr><td>String</td><td>Integer</td><td>Boolean</td></tr><tr><td>Strings are used to describe text surrounded in either single quotation marks or double quotation marks. </td><td>Integers are used to store numbers. </td><td>Booleans are used to denote whether something is true or false</td></tr><tr><td>An example of a String would be \"Hello World\"</td><td>54, 3, and 104 are all examples of Integers</td><td> True or False </td></tr></table>\n  <p>Data Types in Python are used to classify and work with data in different ways. If you wanted to store a message, you would use a String variable. Software Developers and other professions using Python store data in variables.</p>\n  <p>The syntax for creating a variable is as shown:</p>\n</div>\n\n  <div data-pym-src=\"https://www.jdoodle.com/plugin\" data-language=\"python3\"\n        data-version-index=\"4\" >x = 54\ny = \"apple\"\nz = True\nprint(x)\nprint(y)\nprint(z)\n        </div>\n        <script src=\"https://www.jdoodle.com/assets/jdoodle-pym.min.js\" type=\"text/javascript\"></script>\n\n\n\n  <br>\n  \n    <h1 style=\"text-align: center;\">Quiz</h1>\n\n\n  <br>\n  \n  <div class=\"quiz\">\n    <h3 id=\"head1\">What data type is used to store words?</h3>\n    <ul>\n      <input type=\"radio\" name=\"q1\" value=\"Correct\">\n      <label id=\"a1\">String</label> <br>\n      <input type=\"radio\" name=\"q1\" value=\"Wrong\">\n      <label >Boolean</label><br>\n      <input type=\"radio\" name=\"q1\" value=\"Wrong\" >\n      <label >Integer</label><br>\n      <input type=\"radio\" name=\"q1\" value=\"Wrong\">\n      <label>List</label>\n    </ul>\n    \n\n    <h3 id=\"head2\">What type of data is this: 2.3?</h3>\n    <ul>\n      <input type=\"radio\" name=\"q2\" value=\"Wrong\">\n      <label for=\"xs\">String</label> <br>\n      <input type=\"radio\" name=\"q2\" value=\"Wrong\">\n      <label for=\"xs\">Integer</label><br>\n      <input type=\"radio\" name=\"q2\" value=\"Correct\" >\n      <label id=\"a2\">Float</label><br>\n      <input type=\"radio\" name=\"q2\" value=\"Wrong\">\n      <label for=\"xs\">List</label>\n    </ul>\n    \n\n\n\n    <h3 id=\"head3\">Which data type contains multiple other types of data?</h3>\n    <ul>\n      <input type=\"radio\" name=\"q3\" value=\"Wrong\">\n      <label for=\"xs\">String</label> <br>\n      <input type=\"radio\" name=\"q3\" value=\"Wrong\">\n      <label for=\"xs\">Boolean</label><br>\n      <input type=\"radio\" name=\"q3\" value=\"Wrong\">\n      <label for=\"xs\">Integer</label><br>\n      <input type=\"radio\" name=\"q3\" value=\"Correct\">\n      <label id=\"a3\">List</label>\n    </ul>\n    <br>\n    <button onclick=\"Quiz()\" id=\"btn\">Submit</button>\n\n  \n\n\n\n\n\n\n\n  \n  </div>\n</body>','<body> <center><br> <div id=\"body1\"> <h1>Unit 2: Variables </h1><br> <hr/> <center/> <p> Variables are used in Python as well as other coding languages to store information and data to be used or manipulated. As you learned from the previous unit, data types can vary and be stored in variables. You can do math with them as well (adding variables). They serve as placeholders when information can get too big to write out. <p>These variables can be named whatever name, but remember to keep them relevant to the coding task and short. You can always create and use as many variables as you would like, but they should always serve a purpose and be used. </p> </div> <iframe src=\"https://trinket.io/embed/python/edd948bf08\" width=\"100%\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" allowfullscreen></iframe> <br> <h1 style=\"text-align: center;\">Quiz</h1> <br> <div class=\"quiz\"> <h3 id=\"head1\">What can variables NOT be used for?</h3> <ul> <input type=\"radio\" name=\"q1\" value=\"Correct\"> <label id=\"a1\">Storing food</label> <br> <input type=\"radio\" name=\"q1\" value=\"Wrong\"> <label >Storing information</label><br> <input type=\"radio\" name=\"q1\" value=\"Wrong\" > <label >Math</label><br> <input type=\"radio\" name=\"q1\" value=\"Wrong\"> <label>Compact data</label> </ul> <h3 id=\"head2\">How many variables is enough?</h3> <ul> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">Only a few</label> <br> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">Exactly 10</label><br> <input type=\"radio\" name=\"q2\" value=\"Correct\" > <label id=\"a2\">As many as necessary</label><br> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">As many as possible</label> </ul> <h3 id=\"head3\">How long should a variable name be?</h3> <ul> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Long</label> <br> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Super Short</label><br> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Any length</label><br> <input type=\"radio\" name=\"q3\" value=\"Correct\"> <label id=\"a3\">Short</label> </ul> <br> <button onclick=\"Quiz()\" id=\"btn\">Submit</button> </div> </body> ','<body> <center><br> <div id=\"body1\"> <h1>Unit 3: Operators </h1><br> <hr/> <center/> <p> Operators in Python help with doing calculations. These include addition (+), subtraction (-), multiplication (*), and division (/). Additional operators include modulus which returns the remainder of two numbers being divided (example 50/5 = 10 but 50 % 5 = 0)</p> <p>Operators in Python follow the order of operations (PEMDAS). Operators can be used whenever in code when working with multiple data types (strings, integers, floats, etc.).</p> </div> <iframe src=\"https://trinket.io/embed/python/edd948bf08\" width=\"100%\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" allowfullscreen></iframe> <br> <h1 style=\"text-align: center;\">Quiz</h1> <br> <div class=\"quiz\"> <h3 id=\"head1\">Do operators use order of operations?</h3> <ul> <input type=\"radio\" name=\"q1\" value=\"Correct\"> <label id=\"a1\">Yes</label> <br> <input type=\"radio\" name=\"q1\" value=\"Wrong\"> <label >No</label><br> <input type=\"radio\" name=\"q1\" value=\"Wrong\" > <label >Sometimes</label><br> <input type=\"radio\" name=\"q1\" value=\"Wrong\"> <label>No</label> </ul> <h3 id=\"head2\">Which is not an operator in Python?</h3> <ul> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">+</label> <br> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">-</label><br> <input type=\"radio\" name=\"q2\" value=\"Correct\" > <label id=\"a2\">/*/</label><br> <input type=\"radio\" name=\"q2\" value=\"Wrong\"> <label for=\"xs\">*</label> </ul> <h3 id=\"head3\">What can operators not be used on?</h3> <ul> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Integers</label> <br> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Strings</label><br> <input type=\"radio\" name=\"q3\" value=\"Wrong\"> <label for=\"xs\">Floats</label><br> <input type=\"radio\" name=\"q3\" value=\"Correct\"> <label id=\"a3\">Viruses</label> </ul> <br> <button onclick=\"Quiz()\" id=\"btn\">Submit</button> </div> </body>\n','<body> <center><br> <div id=\"body1\"> <h1>PROJECT </h1><br> <hr/> <center/> <p>Using what you have learned, create a program that successfully finds the mean of all the numbers (adding them together then dividing by the number of numbers) and prints a variable out. [50, 40, 20, 5, 1] </p> <p>Test your solution in the interpreter below and paste your code in the Grading Box when completed. When you succeed, move on to the next planet.</p></div> <iframe src=\"https://trinket.io/embed/python/edd948bf08\" width=\"100%\" height=\"356\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" allowfullscreen></iframe> <br> </body>',NULL,'<body> <form action=\"/Completed/\" method=\"post\"> <button name=\"forwardBtn\" type=\"submit\">Forward</button> </form> <h2>Level 1</h2> <p> Beginner <br> Learn the basics of programming, such as data types, variables, and operations </p> <div class=\"Space-Station\"> <form method = \"get\"> <div class=\"cards\"> <div class=\"card-item\"> <span>Data Types</span> <ul> <li>Types of data</li> <li>Uses of data</li> </ul> <a id=\"link1\" href=\"{{url_for(\"content\", num=1)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Variables</span> <ul> <li>Creating variables</li> <li>Using variables</li> </ul> <a id=\"link2\" href=\"{{url_for(\"content\", num=2)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Operations</span> <ul> <li>Operators</li> <li>Math</li> </ul> <a id=\"link3\" href=\"{{url_for(\"content\", num=3)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Conclusion</span> <ul> <li>Data Types</li> <li>Variables</li> <li>Operations</li> </ul> <a id=\"link4\" href=\"{{url_for(\"content\", num=4)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> </div> </form> </div> </body> \n'),(2,NULL,NULL,NULL,NULL,NULL,'<body> <style> #sky { background-color: #FFE569; } #sun { background-color: #B70404; } #ground { background-color: #4F200D; } #grass { background-color: #FF8400; } #sea { background-color: #FFD93D; } </style> <h2>Level 2</h2> <p> Intermediate <br> Learn the basics of programming, such as data types, variables, and operations </p> <div class=\"Space-Station\"> <form method = \"get\"> <div class=\"cards\"> <div class=\"card-item\"> <span>Lists</span> <ul> <li>What are Lists?</li> <li>Using Lists</li> </ul> <a id=\"link1\" href=\"{{url_for(\"content\", num=1)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Conditionals</span> <ul> <li>If statements</li> <li>Else/elif statements</li> <li>Keywords</li> </ul> <a id=\"link2\" href=\"{{url_for(\"content\", num=2)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Loops</span> <ul> <li>For Loops</li> <li>While Loops</li> </ul> <a id=\"link3\" href=\"{{url_for(\"content\", num=3)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> <div class=\"card-item\"> <span>Conclusion</span> <ul> <li>Lists</li> <li>Conditionals</li> <li>Loops</li> </ul> <a id=\"link4\" href=\"{{url_for(\"content\", num=4)}}\" style = \"color: white; text-decoration: none\">Start</a> </div> </div> </form> </div> </body>\n');
/*!40000 ALTER TABLE `html` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-07-10 16:11:36
